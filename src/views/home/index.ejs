<!-- Â© 2025 Linus Kang. All rights reserved. Code is under Apache-2.0 License -->

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Blogger</title>
  <style>
    :root {
      --bg: #121212;
      --card-bg: #1e1e1e;
      --text: #ffffff;
      --subtle: #b0b0b0;
      --accent: #60a5fa; /* Light blue accent */
      --border-radius: 12px;
      --shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
      --hover-shadow: 0 12px 36px rgba(0, 0, 0, 0.4);
    }

    * {
      box-sizing: border-box;
      margin: 0;
    }

    body {
      font-family: 'Segoe UI', Roboto, sans-serif;
      background-color: var(--bg);
      color: var(--text);
      max-width: 1000px;
      margin: 0 auto;
      padding: 40px 20px;
      line-height: 1.8;
    }

    h1 {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 32px;
      color: var(--text);
      text-align: center;
    }

    a {
      color: var(--accent);
      text-decoration: none;
      transition: all 0.3s ease;
      font-weight: 500;
    }

    a:hover {
      opacity: 0.8;
      transform: translateY(-2px);
    }

    .posts {
      display: flex;
      flex-direction: column;
      gap: 32px;
    }

    article {
      background-color: var(--card-bg);
      border-radius: var(--border-radius);
      padding: 28px;
      box-shadow: var(--shadow);
      transition: all 0.3s ease;
    }

    article:hover {
      transform: translateY(-6px);
      box-shadow: var(--hover-shadow);
    }

    article h2 {
      margin-bottom: 12px;
      font-size: 1.8rem;
      font-weight: 600;
      color: var(--text);
    }

    .date {
      font-size: 1rem;
      color: var(--subtle);
      margin-bottom: 16px;
    }

    .preview {
      font-size: 1.1rem;
      color: #d1d1d1;
      margin-bottom: 20px;
    }

    footer {
      text-align: center;
      font-size: 0.9rem;
      color: var(--subtle);
      margin-top: 40px;
    }

    footer p {
      margin-bottom: 10px;
    }

    footer a {
      color: var(--accent);
    }

    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding-bottom: 20px;
      margin-bottom: 40px;
      border-bottom: 1px solid var(--card-bg);
    }

    nav a {
      margin-left: 20px;
      font-weight: 500;
      color: var(--accent);
    }

    nav a:first-child {
      margin-left: 0;
    }

    .posts {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 32px;
      margin-top: 20px;
    }

    h1#blog-name {
      margin: 0;
      text-align: left;
      font-size: 2.2rem;
    }
  </style>
</head>
<script src="/src/credit.js"></script>
<body>
    <header>
      <h1 id="blog-name">Blog</h1>
      <nav>
        <a href="/">Home</a>
        <a href="/about">About</a>
        <a id="loginbutton" href="/login">Login</a>
        <a id="myaccount" href="/my/account">My Account</a>
      </nav>
    </header>
  
    <main>
      <div class="posts">
        <% posts.forEach(post => { %>
          <article>
            <h2><a href="/post/<%= post.slug %>"><%= post.title %></a></h2>
            <p class="date"><%= post.date %></p>
            <p class="preview"><%= post.preview || 'Click to read more...' %></p>
          </article>
        <% }); %>
      </div>
    </main>
  
    <footer>
      <p>This site is powered by <a href="https://github.com/linuskangsoftware/blogger">Blogger</a></p>
    </footer>
  </body>
  
<script>
    async function fetchBlogName() {
      try {
        const res = await fetch("/v1/name", {
          method: "GET"
        });
        const data = await res.json();
        const loginTitle = document.getElementById("blog-name");
        loginTitle.textContent = `${data.name}`;
      } catch (err) {
        console.error("Error fetching blog name:", err);
      }
    }
    fetchBlogName();

  async function checkSessionToken(sessionId) {
    try {
      const res = await fetch(`/account/session?sessionId=${sessionId}`, {
        method: 'GET',
      });
      const data = await res.json();
      if (data.message === 'Session is valid') {
        console.log('You are currently authorised as:', data.user.username);
        document.getElementById('loginbutton').style.display = 'none';
      } else {
        console.log('You are currently authorised as: guest');
        document.getElementById('myaccount').style.display = 'none';
      }
    } catch (err) {
      console.error('An internal server error occurred:', err);
    }
  }

  const sessionId = localStorage.getItem('sessionId');
  checkSessionToken(sessionId);
</script>
</html>
